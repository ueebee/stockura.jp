"""add_celery_beat_tables

Revision ID: 87e8a6480680
Revises: 7c1fab59358e
Create Date: 2025-07-29 16:00:25.707993

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "87e8a6480680"
down_revision: Union[str, None] = "7c1fab59358e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "celery_beat_schedules",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("task_name", sa.String(length=255), nullable=False),
        sa.Column("cron_expression", sa.String(length=100), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("args", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("kwargs", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_celery_beat_schedules_enabled"), "celery_beat_schedules", ["enabled"], unique=False)
    op.create_index(op.f("ix_celery_beat_schedules_name"), "celery_beat_schedules", ["name"], unique=True)
    op.create_table(
        "task_execution_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("schedule_id", sa.UUID(), nullable=True),
        sa.Column("task_name", sa.String(length=255), nullable=False),
        sa.Column("task_id", sa.String(length=255), nullable=True),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("finished_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("result", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["schedule_id"], ["celery_beat_schedules.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_execution_logs_schedule_id"), "task_execution_logs", ["schedule_id"], unique=False)
    op.create_index(op.f("ix_task_execution_logs_started_at"), "task_execution_logs", ["started_at"], unique=False)
    op.create_index(op.f("ix_task_execution_logs_status"), "task_execution_logs", ["status"], unique=False)
    op.create_index(op.f("ix_task_execution_logs_task_id"), "task_execution_logs", ["task_id"], unique=False)
    op.create_index(op.f("ix_task_execution_logs_task_name"), "task_execution_logs", ["task_name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_task_execution_logs_task_name"), table_name="task_execution_logs")
    op.drop_index(op.f("ix_task_execution_logs_task_id"), table_name="task_execution_logs")
    op.drop_index(op.f("ix_task_execution_logs_status"), table_name="task_execution_logs")
    op.drop_index(op.f("ix_task_execution_logs_started_at"), table_name="task_execution_logs")
    op.drop_index(op.f("ix_task_execution_logs_schedule_id"), table_name="task_execution_logs")
    op.drop_table("task_execution_logs")
    op.drop_index(op.f("ix_celery_beat_schedules_name"), table_name="celery_beat_schedules")
    op.drop_index(op.f("ix_celery_beat_schedules_enabled"), table_name="celery_beat_schedules")
    op.drop_table("celery_beat_schedules")
    # ### end Alembic commands ###
