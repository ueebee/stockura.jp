services:
  app:
    image: stockura-app:latest
    container_name: stockura-app
    restart: always
    env_file:
      - .env.prod
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - stockura-network
    command: >
      sh -c "
        python scripts/db_migrate.py &&
        gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
      "

  celery-worker:
    image: stockura-celery:latest
    container_name: stockura-celery-worker
    restart: always
    env_file:
      - .env.prod
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - stockura-network
    command: celery -A app.infrastructure.celery.app worker --loglevel=info --concurrency=4

  celery-beat:
    image: stockura-celery:latest
    container_name: stockura-celery-beat
    restart: always
    env_file:
      - .env.prod
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - celery-worker
    networks:
      - stockura-network
    command: celery -A app.infrastructure.celery.app beat --loglevel=info

  nginx:
    image: nginx:stable
    container_name: stockura-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app
    networks:
      - stockura-network

  postgres:
    image: postgres:16
    container_name: stockura-postgres
    restart: always
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d:ro
      - ./backups:/backups
    networks:
      - stockura-network
    command: >
      postgres
      -c shared_buffers=256MB
      -c max_connections=200
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c wal_buffers=16MB
      -c work_mem=4MB

  redis:
    image: redis:7
    container_name: stockura-redis
    restart: always
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - stockura-network

volumes:
  postgres_data:
  redis_data:

networks:
  stockura-network:
    driver: bridge